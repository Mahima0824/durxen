// card.scss

@each $color, $value in $theme-colors {
    .card {
        &.text-#{$color} {

            .card-header,
            .card-title,
            .card-body {
                color: $value;
            }
        }

        &.card-rounded-shade:has(i.text-#{$color}) {
            &:after {
                background: rgba($value, 0.04);
                border-color: rgba($value, 0.25);
            }
        }
    }
}

.card {
    box-shadow: $card-box-shadow;
    margin-bottom: $grid-gutter-width;

    .card-title {
        margin-bottom: $spacer;
    }

    &.text-white {

        .card-header,
        .card-title,
        .card-body {
            color: $white;
        }
    }

    .card-body {
        .card-title {
            font-size: 18px;
        }
    }

    &.card-hover {
        transition: all 0.3s ease-in-out;

        &:hover {
            transform: translateY(-5px);
            box-shadow: $card-hover-shadow;
        }
    }

    &.card-blur {
        background-color: rgba($white, 0.5);
        backdrop-filter: blur(10px);
        border-color: rgba($white, 0.4);
    }

    .card-img-overlay {
        background-color: rgba($dark, 0.7);

        .card-title {
            color: $white;
        }
    }

    &.card-rounded-shade {
        &::after {
            content: "";
            position: absolute;
            right: 0;
            top: 0;
            bottom: 0;
            height: 100%;
            width: 120px;
            border-top-left-radius: 50%;
            border-bottom-left-radius: 50%;
            border-left: $border-width solid;

            @include media-breakpoint-down(md) {
                width: 100px;
            }
        }
    }

    // Card flip
    .card-flip {
        width: 100%;
        perspective: 1000px;

        .card-flip-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.9s ease;
            transform-style: preserve-3d;

            .card-number {
                font-size: $font-size-lg;

                span {
                    font-size: $font-size-sm;
                }

                @include media-breakpoint-down(sm) {
                    font-size: $font-size-lg * 0.8;

                    span {
                        font-size: $font-size-sm * 0.8;
                    }
                }
            }
        }

        &:hover .card-flip-inner {
            transform: rotateY(180deg);
        }

        .card-flip-front,
        .card-flip-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            transition: background-color 0.9s ease;
        }

        .card-flip-back {
            transform: rotateY(180deg);
        }
    }

    &.card-hover {
        position: relative;
        background-color: rgba($dark, 0.06);
        cursor: pointer;

        .card-hover-rotate {
            transform: rotate(-2deg);
            transition: all 0.4s ease-in-out;

            &::before {
                content: "";
                position: absolute;
                left: 0;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg,
                        rgba($primary, 0.05) 0%,
                        rgba($primary, 0.01) 100%);
                z-index: 0;
                opacity: 0;
                transition: all 0.4s ease-in-out;
                transform: translateX(100%) skewX(-15deg);
            }

            &:hover {
                transform: rotate(0);
                box-shadow: 0 10px 20px rgba($dark, 0.1) !important;

                &::before {
                    opacity: 1;
                    transform: translateX(0) skewX(0);
                }
            }
        }
    }

    // Vertical hover card effect
    &.card-hover-vertical {
        transition: all 0.3s ease;
        border: none !important;
        box-shadow: 0 4px 6px -1px rgba($dark, 0.05), 0 2px 4px -1px rgba($dark, 0.02);
        position: relative;
        overflow: hidden;

        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(to bottom, $primary, $success, $warning, $danger);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        &:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 15px -3px rgba($dark, 0.1), 0 4px 6px -2px rgba($dark, 0.05) !important;

            &::before {
                opacity: 1;
            }

            .progress-bar::after {
                opacity: 1;
                right: -6px;
            }


        }
    }
}



// debit-card
.debit-card {
    .card-wifi-icon {
        font-size: 8rem;
    }

    .debit-inner {
        transform: rotate(-10deg);
        background-color: rgba($white, 0.12);
        backdrop-filter: blur(16px);
        border: 1px solid rgba($white, 0.3);
        position: relative;
        overflow: hidden;
        transition: $transition;

        &::after {
            content: "";
            position: absolute;
            right: -80px;
            bottom: -80px;
            height: 200px;
            width: 200px;
            border: 30px solid rgba($white, 0.04);
            border-radius: 50%;
            box-shadow: inset -5px 5px 8px 0px rgba($dark, 0.06);
            z-index: -1;
        }

        &::before {
            content: "";
            position: absolute;
            left: -80px;
            top: -80px;
            height: 300px;
            width: 300px;
            border: 30px solid rgba($white, 0.04);
            border-radius: 50%;
            box-shadow: inset -5px 5px 8px 0px rgba($dark, 0.06);
            z-index: -1;
        }

        @include media-breakpoint-down(lg) {
            transform: rotate(-5deg);
        }
    }

    &::before {
        content: "";
        background-color: rgba($primary, 0.08);
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        transform: rotate(10deg);
        border-radius: inherit;
        transition: $transition;

        @include media-breakpoint-down(lg) {
            transform: rotate(5deg);
        }
    }

    &:hover {

        .debit-inner,
        &::before {
            transform: rotate(0deg);
        }

        .debit-inner {
            background-color: rgba($white, 0);
            border: 1px solid rgba($white, 0);
        }
    }
}

.activity-item {
    position: relative;
    z-index: 2;

    &::after {
        content: "";
        position: absolute;
        left: 20px;
        top: 36px;
        height: 90%;
        width: 2px;
        background-color: $gray-200;
        z-index: -1;
    }

    &:last-child {
        &::after {
            display: none;
        }
    }
}

/* HTML: <div class="ribbon">Your text content</div> */
.ribbon {
    font-size: 20px;
    font-weight: bold;
    color: #fff;
}

.ribbon {
    --f: .5em;
    /* control the folded part*/
    --r: .8em;
    /* control the ribbon shape */
    position: absolute;
    top: 20px;
    right: calc(-1*var(--f));
    padding-inline: .25em;
    line-height: 1.8;
    background: linear-gradient(45deg, (tint-color($orange, 30%), tint-color($danger, 20%), tint-color($orange, 30%)));
    border-bottom: var(--f) solid #0005;
    border-left: var(--r) solid #0000;
    clip-path:
        polygon(var(--r) 0, 100% 0, 100% calc(100% - var(--f)), calc(100% - var(--f)) 100%,
            calc(100% - var(--f)) calc(100% - var(--f)), var(--r) calc(100% - var(--f)),
            0 calc(50% - var(--f)/2));
}